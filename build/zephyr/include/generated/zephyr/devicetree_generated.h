/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /home/a-fleloir/zephyrproject/application_user/openamp_rsc_table/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /soc
 *   4   /soc/interrupt-controller@e000e100
 *   5   /mailbox0@A9000000
 *   6   /mbox-consumer
 *   7   /memory@0
 *   8   /memory@9CC00000
 *   9   /memory1@40000
 *   10  /pinctrl@4084000
 *   11  /pinctrl@4084000/mcu_uart0_rx_default
 *   12  /pinctrl@4084000/mcu_uart0_tx_default
 *   13  /serial@4a00000
 *   14  /system-clock
 *   15  /cpus
 *   16  /cpus/cpu@0
 *   17  /pinctrl@4084000/mcu_gpio0_led_default
 *   18  /gpio@4201010
 *   19  /leds
 *   20  /leds/led_0
 *   21  /reserved-memory
 *   22  /reserved-memory/memory@9cb00000
 *   23  /soc/timer@e000e010
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FULL_NAME_UNQUOTED /
#define DT_N_FULL_NAME_TOKEN _
#define DT_N_FULL_NAME_UPPER_TOKEN _

/* Helpers for dealing with node labels: */
#define DT_N_NODELABEL_NUM 0
#define DT_N_FOREACH_NODELABEL(fn) 
#define DT_N_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_CHILD_NUM 15
#define DT_N_CHILD_NUM_STATUS_OKAY 15
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_0) fn(DT_N_S_memory1_40000) fn(DT_N_S_system_clock) fn(DT_N_S_mailbox0_a9000000) fn(DT_N_S_pinctrl_4084000) fn(DT_N_S_serial_4a00000) fn(DT_N_S_gpio_4201010) fn(DT_N_S_memory_9cc00000) fn(DT_N_S_reserved_memory) fn(DT_N_S_mbox_consumer) fn(DT_N_S_leds)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory1_40000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_system_clock) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mailbox0_a9000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_4084000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_serial_4a00000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_4201010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_9cc00000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_reserved_memory) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mbox_consumer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_0, __VA_ARGS__) fn(DT_N_S_memory1_40000, __VA_ARGS__) fn(DT_N_S_system_clock, __VA_ARGS__) fn(DT_N_S_mailbox0_a9000000, __VA_ARGS__) fn(DT_N_S_pinctrl_4084000, __VA_ARGS__) fn(DT_N_S_serial_4a00000, __VA_ARGS__) fn(DT_N_S_gpio_4201010, __VA_ARGS__) fn(DT_N_S_memory_9cc00000, __VA_ARGS__) fn(DT_N_S_reserved_memory, __VA_ARGS__) fn(DT_N_S_mbox_consumer, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory1_40000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_system_clock, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mailbox0_a9000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_4084000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_serial_4a00000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_4201010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_9cc00000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_reserved_memory, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mbox_consumer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_0) fn(DT_N_S_memory1_40000) fn(DT_N_S_system_clock) fn(DT_N_S_mailbox0_a9000000) fn(DT_N_S_pinctrl_4084000) fn(DT_N_S_serial_4a00000) fn(DT_N_S_gpio_4201010) fn(DT_N_S_memory_9cc00000) fn(DT_N_S_reserved_memory) fn(DT_N_S_mbox_consumer) fn(DT_N_S_leds)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory1_40000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_system_clock) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mailbox0_a9000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_4084000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_serial_4a00000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_4201010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_9cc00000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_reserved_memory) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mbox_consumer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_0, __VA_ARGS__) fn(DT_N_S_memory1_40000, __VA_ARGS__) fn(DT_N_S_system_clock, __VA_ARGS__) fn(DT_N_S_mailbox0_a9000000, __VA_ARGS__) fn(DT_N_S_pinctrl_4084000, __VA_ARGS__) fn(DT_N_S_serial_4a00000, __VA_ARGS__) fn(DT_N_S_gpio_4201010, __VA_ARGS__) fn(DT_N_S_memory_9cc00000, __VA_ARGS__) fn(DT_N_S_reserved_memory, __VA_ARGS__) fn(DT_N_S_mbox_consumer, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory1_40000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_system_clock, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mailbox0_a9000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_4084000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_serial_4a00000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_4201010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_9cc00000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_reserved_memory, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mbox_consumer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /soc */ \
	5, /* /mailbox0@A9000000 */ \
	6, /* /mbox-consumer */ \
	7, /* /memory@0 */ \
	8, /* /memory@9CC00000 */ \
	9, /* /memory1@40000 */ \
	10, /* /pinctrl@4084000 */ \
	13, /* /serial@4a00000 */ \
	14, /* /system-clock */ \
	15, /* /cpus */ \
	18, /* /gpio@4201010 */ \
	19, /* /leds */ \
	21, /* /reserved-memory */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_phytec_phyboard_lyra_am62xx_m4 DT_N
#define DT_N_INST_0_ti_am625                       DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_IRQ_LEVEL 0
#define DT_N_COMPAT_MATCHES_phytec_phyboard_lyra_am62xx_m4 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "PHYTEC"
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "phyboard-lyra-am62xx-m4"
#define DT_N_COMPAT_MATCHES_ti_am625 1
#define DT_N_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_1 "Texas Instruments"
#define DT_N_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_1 "am625"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"phytec,phyboard-lyra-am62xx-m4", "ti,am625"}
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_IDX_0 "phytec,phyboard-lyra-am62xx-m4"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED phytec,phyboard-lyra-am62xx-m4
#define DT_N_P_compatible_IDX_0_STRING_TOKEN phytec_phyboard_lyra_am62xx_m4
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN PHYTEC_PHYBOARD_LYRA_AM62XX_M4
#define DT_N_P_compatible_IDX_1_EXISTS 1
#define DT_N_P_compatible_IDX_1 "ti,am625"
#define DT_N_P_compatible_IDX_1_STRING_UNQUOTED ti,am625
#define DT_N_P_compatible_IDX_1_STRING_TOKEN ti_am625
#define DT_N_P_compatible_IDX_1_STRING_UPPER_TOKEN TI_AM625
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0) \
	fn(DT_N, compatible, 1)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N, compatible, 1)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__) \
	fn(DT_N, compatible, 1, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N, compatible, 1, __VA_ARGS__)
#define DT_N_P_compatible_LEN 2
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"
#define DT_N_S_aliases_FULL_NAME_UNQUOTED aliases
#define DT_N_S_aliases_FULL_NAME_TOKEN aliases
#define DT_N_S_aliases_FULL_NAME_UPPER_TOKEN ALIASES

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_aliases_NODELABEL_NUM 0
#define DT_N_S_aliases_FOREACH_NODELABEL(fn) 
#define DT_N_S_aliases_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_CHILD_NUM 0
#define DT_N_S_aliases_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_IRQ_LEVEL 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"
#define DT_N_S_chosen_FULL_NAME_UNQUOTED chosen
#define DT_N_S_chosen_FULL_NAME_TOKEN chosen
#define DT_N_S_chosen_FULL_NAME_UPPER_TOKEN CHOSEN

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_chosen_NODELABEL_NUM 0
#define DT_N_S_chosen_FOREACH_NODELABEL(fn) 
#define DT_N_S_chosen_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_CHILD_NUM 0
#define DT_N_S_chosen_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_IRQ_LEVEL 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"
#define DT_N_S_soc_FULL_NAME_UNQUOTED soc
#define DT_N_S_soc_FULL_NAME_TOKEN soc
#define DT_N_S_soc_FULL_NAME_UPPER_TOKEN SOC

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_NODELABEL_NUM 0
#define DT_N_S_soc_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_CHILD_NUM 2
#define DT_N_S_soc_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 3
#define DT_N_S_soc_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	4, /* /soc/interrupt-controller@e000e100 */ \
	23, /* /soc/timer@e000e010 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_IRQ_LEVEL 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_UNQUOTED interrupt-controller@e000e100
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_TOKEN interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_UPPER_TOKEN INTERRUPT_CONTROLLER_E000E100

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL(fn) fn(nvic)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL_VARGS(fn, ...) fn(nvic, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 4
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	5, /* /mailbox0@A9000000 */ \
	13, /* /serial@4a00000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_LEVEL 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 3
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v7m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v7m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V7M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /mailbox0@A9000000
 *
 * Node identifier: DT_N_S_mailbox0_a9000000
 *
 * Binding (compatible = ti,omap-mailbox):
 *   $ZEPHYR_BASE/dts/bindings/mbox/ti,omap-mailbox.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mailbox0_a9000000_PATH "/mailbox0@A9000000"

/* Node's name with unit-address: */
#define DT_N_S_mailbox0_a9000000_FULL_NAME "mailbox0@A9000000"
#define DT_N_S_mailbox0_a9000000_FULL_NAME_UNQUOTED mailbox0@A9000000
#define DT_N_S_mailbox0_a9000000_FULL_NAME_TOKEN mailbox0_A9000000
#define DT_N_S_mailbox0_a9000000_FULL_NAME_UPPER_TOKEN MAILBOX0_A9000000

/* Node parent (/) identifier: */
#define DT_N_S_mailbox0_a9000000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_mailbox0_a9000000_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_mailbox0_a9000000_NODELABEL_NUM 1
#define DT_N_S_mailbox0_a9000000_FOREACH_NODELABEL(fn) fn(mbox0)
#define DT_N_S_mailbox0_a9000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(mbox0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_mailbox0_a9000000_CHILD_NUM 0
#define DT_N_S_mailbox0_a9000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_mailbox0_a9000000_FOREACH_CHILD(fn) 
#define DT_N_S_mailbox0_a9000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_mailbox0_a9000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_mailbox0_a9000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_mailbox0_a9000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_mailbox0_a9000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_mailbox0_a9000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_mailbox0_a9000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_mailbox0_a9000000_ORD 5
#define DT_N_S_mailbox0_a9000000_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mailbox0_a9000000_REQUIRES_ORDS \
	0, /* / */ \
	4, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mailbox0_a9000000_SUPPORTS_ORDS \
	6, /* /mbox-consumer */

/* Existence and alternate IDs: */
#define DT_N_S_mailbox0_a9000000_EXISTS 1
#define DT_N_INST_0_ti_omap_mailbox DT_N_S_mailbox0_a9000000
#define DT_N_NODELABEL_mbox0        DT_N_S_mailbox0_a9000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_mailbox0_a9000000_REG_NUM 1
#define DT_N_S_mailbox0_a9000000_REG_IDX_0_EXISTS 1
#define DT_N_S_mailbox0_a9000000_REG_IDX_0_VAL_ADDRESS 2835349504 /* 0xa9000000 */
#define DT_N_S_mailbox0_a9000000_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_mailbox0_a9000000_RANGES_NUM 0
#define DT_N_S_mailbox0_a9000000_FOREACH_RANGE(fn) 
#define DT_N_S_mailbox0_a9000000_IRQ_NUM 1
#define DT_N_S_mailbox0_a9000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_mailbox0_a9000000_IRQ_IDX_0_VAL_irq 50
#define DT_N_S_mailbox0_a9000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_mailbox0_a9000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_mailbox0_a9000000_IRQ_IDX_0_VAL_priority 4
#define DT_N_S_mailbox0_a9000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_mailbox0_a9000000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_mailbox0_a9000000_IRQ_LEVEL 1
#define DT_N_S_mailbox0_a9000000_COMPAT_MATCHES_ti_omap_mailbox 1
#define DT_N_S_mailbox0_a9000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_mailbox0_a9000000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_mailbox0_a9000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_mailbox0_a9000000_COMPAT_MODEL_IDX_0 "omap-mailbox"
#define DT_N_S_mailbox0_a9000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_mailbox0_a9000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_mailbox0_a9000000_P_reg {2835349504 /* 0xa9000000 */, 512 /* 0x200 */}
#define DT_N_S_mailbox0_a9000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_mailbox0_a9000000_P_reg_IDX_0 2835349504
#define DT_N_S_mailbox0_a9000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_mailbox0_a9000000_P_reg_IDX_1 512
#define DT_N_S_mailbox0_a9000000_P_reg_EXISTS 1
#define DT_N_S_mailbox0_a9000000_P_interrupts {50 /* 0x32 */, 4 /* 0x4 */}
#define DT_N_S_mailbox0_a9000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_mailbox0_a9000000_P_interrupts_IDX_0 50
#define DT_N_S_mailbox0_a9000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_mailbox0_a9000000_P_interrupts_IDX_1 4
#define DT_N_S_mailbox0_a9000000_P_interrupts_EXISTS 1
#define DT_N_S_mailbox0_a9000000_P_usr_id 2
#define DT_N_S_mailbox0_a9000000_P_usr_id_EXISTS 1
#define DT_N_S_mailbox0_a9000000_P_status "okay"
#define DT_N_S_mailbox0_a9000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_mailbox0_a9000000_P_status_STRING_TOKEN okay
#define DT_N_S_mailbox0_a9000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_mailbox0_a9000000_P_status_IDX_0 "okay"
#define DT_N_S_mailbox0_a9000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_mailbox0_a9000000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_mailbox0_a9000000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_mailbox0_a9000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mailbox0_a9000000, status, 0)
#define DT_N_S_mailbox0_a9000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mailbox0_a9000000, status, 0)
#define DT_N_S_mailbox0_a9000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mailbox0_a9000000, status, 0, __VA_ARGS__)
#define DT_N_S_mailbox0_a9000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mailbox0_a9000000, status, 0, __VA_ARGS__)
#define DT_N_S_mailbox0_a9000000_P_status_LEN 1
#define DT_N_S_mailbox0_a9000000_P_status_EXISTS 1
#define DT_N_S_mailbox0_a9000000_P_compatible {"ti,omap-mailbox"}
#define DT_N_S_mailbox0_a9000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_mailbox0_a9000000_P_compatible_IDX_0 "ti,omap-mailbox"
#define DT_N_S_mailbox0_a9000000_P_compatible_IDX_0_STRING_UNQUOTED ti,omap-mailbox
#define DT_N_S_mailbox0_a9000000_P_compatible_IDX_0_STRING_TOKEN ti_omap_mailbox
#define DT_N_S_mailbox0_a9000000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_OMAP_MAILBOX
#define DT_N_S_mailbox0_a9000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mailbox0_a9000000, compatible, 0)
#define DT_N_S_mailbox0_a9000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mailbox0_a9000000, compatible, 0)
#define DT_N_S_mailbox0_a9000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mailbox0_a9000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_mailbox0_a9000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mailbox0_a9000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_mailbox0_a9000000_P_compatible_LEN 1
#define DT_N_S_mailbox0_a9000000_P_compatible_EXISTS 1
#define DT_N_S_mailbox0_a9000000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_mailbox0_a9000000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_mailbox0_a9000000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_mailbox0_a9000000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_mailbox0_a9000000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mailbox0_a9000000, interrupt_parent, 0)
#define DT_N_S_mailbox0_a9000000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mailbox0_a9000000, interrupt_parent, 0)
#define DT_N_S_mailbox0_a9000000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mailbox0_a9000000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_mailbox0_a9000000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mailbox0_a9000000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_mailbox0_a9000000_P_interrupt_parent_LEN 1
#define DT_N_S_mailbox0_a9000000_P_interrupt_parent_EXISTS 1
#define DT_N_S_mailbox0_a9000000_P_zephyr_deferred_init 0
#define DT_N_S_mailbox0_a9000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_mailbox0_a9000000_P_wakeup_source 0
#define DT_N_S_mailbox0_a9000000_P_wakeup_source_EXISTS 1
#define DT_N_S_mailbox0_a9000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_mailbox0_a9000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /mbox-consumer
 *
 * Node identifier: DT_N_S_mbox_consumer
 *
 * Binding (compatible = vnd,mbox-consumer):
 *   $ZEPHYR_BASE/dts/bindings/test/vnd,mbox-consumer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mbox_consumer_PATH "/mbox-consumer"

/* Node's name with unit-address: */
#define DT_N_S_mbox_consumer_FULL_NAME "mbox-consumer"
#define DT_N_S_mbox_consumer_FULL_NAME_UNQUOTED mbox-consumer
#define DT_N_S_mbox_consumer_FULL_NAME_TOKEN mbox_consumer
#define DT_N_S_mbox_consumer_FULL_NAME_UPPER_TOKEN MBOX_CONSUMER

/* Node parent (/) identifier: */
#define DT_N_S_mbox_consumer_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_mbox_consumer_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_mbox_consumer_NODELABEL_NUM 0
#define DT_N_S_mbox_consumer_FOREACH_NODELABEL(fn) 
#define DT_N_S_mbox_consumer_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_mbox_consumer_CHILD_NUM 0
#define DT_N_S_mbox_consumer_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_mbox_consumer_FOREACH_CHILD(fn) 
#define DT_N_S_mbox_consumer_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_mbox_consumer_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_mbox_consumer_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_mbox_consumer_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_mbox_consumer_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_mbox_consumer_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_mbox_consumer_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_mbox_consumer_ORD 6
#define DT_N_S_mbox_consumer_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mbox_consumer_REQUIRES_ORDS \
	0, /* / */ \
	5, /* /mailbox0@A9000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mbox_consumer_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_mbox_consumer_EXISTS 1
#define DT_N_INST_0_vnd_mbox_consumer DT_N_S_mbox_consumer

/* Macros for properties that are special in the specification: */
#define DT_N_S_mbox_consumer_REG_NUM 0
#define DT_N_S_mbox_consumer_RANGES_NUM 0
#define DT_N_S_mbox_consumer_FOREACH_RANGE(fn) 
#define DT_N_S_mbox_consumer_IRQ_NUM 0
#define DT_N_S_mbox_consumer_IRQ_LEVEL 0
#define DT_N_S_mbox_consumer_COMPAT_MATCHES_vnd_mbox_consumer 1
#define DT_N_S_mbox_consumer_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_mbox_consumer_COMPAT_VENDOR_IDX_0 "A stand-in for a real vendor which can be used in examples and tests"
#define DT_N_S_mbox_consumer_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_mbox_consumer_COMPAT_MODEL_IDX_0 "mbox-consumer"
#define DT_N_S_mbox_consumer_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_mbox_consumer_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_mbox_consumer_P_mboxes_IDX_0_EXISTS 1
#define DT_N_S_mbox_consumer_P_mboxes_IDX_0_PH DT_N_S_mailbox0_a9000000
#define DT_N_S_mbox_consumer_P_mboxes_IDX_0_VAL_channel 0
#define DT_N_S_mbox_consumer_P_mboxes_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_mbox_consumer_P_mboxes_IDX_0_NAME "tx"
#define DT_N_S_mbox_consumer_P_mboxes_NAME_tx_PH DT_N_S_mailbox0_a9000000
#define DT_N_S_mbox_consumer_P_mboxes_NAME_tx_EXISTS 1
#define DT_N_S_mbox_consumer_P_mboxes_NAME_tx_VAL_channel DT_N_S_mbox_consumer_P_mboxes_IDX_0_VAL_channel
#define DT_N_S_mbox_consumer_P_mboxes_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_mbox_consumer_P_mboxes_IDX_1_EXISTS 1
#define DT_N_S_mbox_consumer_P_mboxes_IDX_1_PH DT_N_S_mailbox0_a9000000
#define DT_N_S_mbox_consumer_P_mboxes_IDX_1_VAL_channel 1
#define DT_N_S_mbox_consumer_P_mboxes_IDX_1_VAL_channel_EXISTS 1
#define DT_N_S_mbox_consumer_P_mboxes_IDX_1_NAME "rx"
#define DT_N_S_mbox_consumer_P_mboxes_NAME_rx_PH DT_N_S_mailbox0_a9000000
#define DT_N_S_mbox_consumer_P_mboxes_NAME_rx_EXISTS 1
#define DT_N_S_mbox_consumer_P_mboxes_NAME_rx_VAL_channel DT_N_S_mbox_consumer_P_mboxes_IDX_1_VAL_channel
#define DT_N_S_mbox_consumer_P_mboxes_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_mbox_consumer_P_mboxes_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mbox_consumer, mboxes, 0) \
	fn(DT_N_S_mbox_consumer, mboxes, 1)
#define DT_N_S_mbox_consumer_P_mboxes_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mbox_consumer, mboxes, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mbox_consumer, mboxes, 1)
#define DT_N_S_mbox_consumer_P_mboxes_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mbox_consumer, mboxes, 0, __VA_ARGS__) \
	fn(DT_N_S_mbox_consumer, mboxes, 1, __VA_ARGS__)
#define DT_N_S_mbox_consumer_P_mboxes_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mbox_consumer, mboxes, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mbox_consumer, mboxes, 1, __VA_ARGS__)
#define DT_N_S_mbox_consumer_P_mboxes_LEN 2
#define DT_N_S_mbox_consumer_P_mboxes_EXISTS 1
#define DT_N_S_mbox_consumer_P_mbox_names {"tx", "rx"}
#define DT_N_S_mbox_consumer_P_mbox_names_IDX_0_EXISTS 1
#define DT_N_S_mbox_consumer_P_mbox_names_IDX_0 "tx"
#define DT_N_S_mbox_consumer_P_mbox_names_IDX_0_STRING_UNQUOTED tx
#define DT_N_S_mbox_consumer_P_mbox_names_IDX_0_STRING_TOKEN tx
#define DT_N_S_mbox_consumer_P_mbox_names_IDX_0_STRING_UPPER_TOKEN TX
#define DT_N_S_mbox_consumer_P_mbox_names_IDX_1_EXISTS 1
#define DT_N_S_mbox_consumer_P_mbox_names_IDX_1 "rx"
#define DT_N_S_mbox_consumer_P_mbox_names_IDX_1_STRING_UNQUOTED rx
#define DT_N_S_mbox_consumer_P_mbox_names_IDX_1_STRING_TOKEN rx
#define DT_N_S_mbox_consumer_P_mbox_names_IDX_1_STRING_UPPER_TOKEN RX
#define DT_N_S_mbox_consumer_P_mbox_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mbox_consumer, mbox_names, 0) \
	fn(DT_N_S_mbox_consumer, mbox_names, 1)
#define DT_N_S_mbox_consumer_P_mbox_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mbox_consumer, mbox_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mbox_consumer, mbox_names, 1)
#define DT_N_S_mbox_consumer_P_mbox_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mbox_consumer, mbox_names, 0, __VA_ARGS__) \
	fn(DT_N_S_mbox_consumer, mbox_names, 1, __VA_ARGS__)
#define DT_N_S_mbox_consumer_P_mbox_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mbox_consumer, mbox_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mbox_consumer, mbox_names, 1, __VA_ARGS__)
#define DT_N_S_mbox_consumer_P_mbox_names_LEN 2
#define DT_N_S_mbox_consumer_P_mbox_names_EXISTS 1
#define DT_N_S_mbox_consumer_P_compatible {"vnd,mbox-consumer"}
#define DT_N_S_mbox_consumer_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_mbox_consumer_P_compatible_IDX_0 "vnd,mbox-consumer"
#define DT_N_S_mbox_consumer_P_compatible_IDX_0_STRING_UNQUOTED vnd,mbox-consumer
#define DT_N_S_mbox_consumer_P_compatible_IDX_0_STRING_TOKEN vnd_mbox_consumer
#define DT_N_S_mbox_consumer_P_compatible_IDX_0_STRING_UPPER_TOKEN VND_MBOX_CONSUMER
#define DT_N_S_mbox_consumer_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mbox_consumer, compatible, 0)
#define DT_N_S_mbox_consumer_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mbox_consumer, compatible, 0)
#define DT_N_S_mbox_consumer_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mbox_consumer, compatible, 0, __VA_ARGS__)
#define DT_N_S_mbox_consumer_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mbox_consumer, compatible, 0, __VA_ARGS__)
#define DT_N_S_mbox_consumer_P_compatible_LEN 1
#define DT_N_S_mbox_consumer_P_compatible_EXISTS 1
#define DT_N_S_mbox_consumer_P_zephyr_deferred_init 0
#define DT_N_S_mbox_consumer_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_mbox_consumer_P_wakeup_source 0
#define DT_N_S_mbox_consumer_P_wakeup_source_EXISTS 1
#define DT_N_S_mbox_consumer_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_mbox_consumer_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /memory@0
 *
 * Node identifier: DT_N_S_memory_0
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_0_PATH "/memory@0"

/* Node's name with unit-address: */
#define DT_N_S_memory_0_FULL_NAME "memory@0"
#define DT_N_S_memory_0_FULL_NAME_UNQUOTED memory@0
#define DT_N_S_memory_0_FULL_NAME_TOKEN memory_0
#define DT_N_S_memory_0_FULL_NAME_UPPER_TOKEN MEMORY_0

/* Node parent (/) identifier: */
#define DT_N_S_memory_0_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_0_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_memory_0_NODELABEL_NUM 1
#define DT_N_S_memory_0_FOREACH_NODELABEL(fn) fn(sram0)
#define DT_N_S_memory_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory_0_CHILD_NUM 0
#define DT_N_S_memory_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_memory_0_FOREACH_CHILD(fn) 
#define DT_N_S_memory_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_0_ORD 7
#define DT_N_S_memory_0_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_0_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_0_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory_0
#define DT_N_NODELABEL_sram0  DT_N_S_memory_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_0_REG_NUM 1
#define DT_N_S_memory_0_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_memory_0_REG_IDX_0_VAL_SIZE 196608 /* 0x30000 */
#define DT_N_S_memory_0_RANGES_NUM 0
#define DT_N_S_memory_0_FOREACH_RANGE(fn) 
#define DT_N_S_memory_0_IRQ_NUM 0
#define DT_N_S_memory_0_IRQ_LEVEL 0
#define DT_N_S_memory_0_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_0_P_reg {0 /* 0x0 */, 196608 /* 0x30000 */}
#define DT_N_S_memory_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_0_P_reg_IDX_0 0
#define DT_N_S_memory_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_0_P_reg_IDX_1 196608
#define DT_N_S_memory_0_P_reg_EXISTS 1
#define DT_N_S_memory_0_P_compatible {"mmio-sram"}
#define DT_N_S_memory_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_0_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory_0_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_memory_0_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_memory_0_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_0, compatible, 0)
#define DT_N_S_memory_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_0, compatible, 0)
#define DT_N_S_memory_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_0_P_compatible_LEN 1
#define DT_N_S_memory_0_P_compatible_EXISTS 1
#define DT_N_S_memory_0_P_zephyr_deferred_init 0
#define DT_N_S_memory_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_memory_0_P_wakeup_source 0
#define DT_N_S_memory_0_P_wakeup_source_EXISTS 1
#define DT_N_S_memory_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /memory@9CC00000
 *
 * Node identifier: DT_N_S_memory_9cc00000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_9cc00000_PATH "/memory@9CC00000"

/* Node's name with unit-address: */
#define DT_N_S_memory_9cc00000_FULL_NAME "memory@9CC00000"
#define DT_N_S_memory_9cc00000_FULL_NAME_UNQUOTED memory@9CC00000
#define DT_N_S_memory_9cc00000_FULL_NAME_TOKEN memory_9CC00000
#define DT_N_S_memory_9cc00000_FULL_NAME_UPPER_TOKEN MEMORY_9CC00000

/* Node parent (/) identifier: */
#define DT_N_S_memory_9cc00000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_9cc00000_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_memory_9cc00000_NODELABEL_NUM 1
#define DT_N_S_memory_9cc00000_FOREACH_NODELABEL(fn) fn(ddr0)
#define DT_N_S_memory_9cc00000_FOREACH_NODELABEL_VARGS(fn, ...) fn(ddr0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory_9cc00000_CHILD_NUM 0
#define DT_N_S_memory_9cc00000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_memory_9cc00000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_9cc00000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory_9cc00000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_9cc00000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory_9cc00000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_9cc00000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory_9cc00000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory_9cc00000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_9cc00000_ORD 8
#define DT_N_S_memory_9cc00000_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_9cc00000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_9cc00000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_9cc00000_EXISTS 1
#define DT_N_INST_0_zephyr_memory_region DT_N_S_memory_9cc00000
#define DT_N_INST_2_mmio_sram            DT_N_S_memory_9cc00000
#define DT_N_NODELABEL_ddr0              DT_N_S_memory_9cc00000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_9cc00000_REG_NUM 1
#define DT_N_S_memory_9cc00000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_9cc00000_REG_IDX_0_VAL_ADDRESS 2629828608 /* 0x9cc00000 */
#define DT_N_S_memory_9cc00000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_memory_9cc00000_RANGES_NUM 0
#define DT_N_S_memory_9cc00000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_9cc00000_IRQ_NUM 0
#define DT_N_S_memory_9cc00000_IRQ_LEVEL 0
#define DT_N_S_memory_9cc00000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_memory_9cc00000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_memory_9cc00000_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_memory_9cc00000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_memory_9cc00000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_memory_9cc00000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_9cc00000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_9cc00000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_9cc00000_P_zephyr_memory_region "DDR"
#define DT_N_S_memory_9cc00000_P_zephyr_memory_region_STRING_UNQUOTED DDR
#define DT_N_S_memory_9cc00000_P_zephyr_memory_region_STRING_TOKEN DDR
#define DT_N_S_memory_9cc00000_P_zephyr_memory_region_STRING_UPPER_TOKEN DDR
#define DT_N_S_memory_9cc00000_P_zephyr_memory_region_IDX_0 "DDR"
#define DT_N_S_memory_9cc00000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_memory_9cc00000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_9cc00000, zephyr_memory_region, 0)
#define DT_N_S_memory_9cc00000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_9cc00000, zephyr_memory_region, 0)
#define DT_N_S_memory_9cc00000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_9cc00000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_memory_9cc00000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_9cc00000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_memory_9cc00000_P_zephyr_memory_region_LEN 1
#define DT_N_S_memory_9cc00000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_memory_9cc00000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_memory_9cc00000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_9cc00000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_memory_9cc00000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_memory_9cc00000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_memory_9cc00000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_memory_9cc00000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_memory_9cc00000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_memory_9cc00000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_memory_9cc00000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_memory_9cc00000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory_9cc00000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_9cc00000, compatible, 0) \
	fn(DT_N_S_memory_9cc00000, compatible, 1)
#define DT_N_S_memory_9cc00000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_9cc00000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_memory_9cc00000, compatible, 1)
#define DT_N_S_memory_9cc00000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_9cc00000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_9cc00000, compatible, 1, __VA_ARGS__)
#define DT_N_S_memory_9cc00000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_9cc00000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_memory_9cc00000, compatible, 1, __VA_ARGS__)
#define DT_N_S_memory_9cc00000_P_compatible_LEN 2
#define DT_N_S_memory_9cc00000_P_compatible_EXISTS 1
#define DT_N_S_memory_9cc00000_P_reg {2629828608 /* 0x9cc00000 */, 4096 /* 0x1000 */}
#define DT_N_S_memory_9cc00000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_9cc00000_P_reg_IDX_0 2629828608
#define DT_N_S_memory_9cc00000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_9cc00000_P_reg_IDX_1 4096
#define DT_N_S_memory_9cc00000_P_reg_EXISTS 1
#define DT_N_S_memory_9cc00000_P_zephyr_deferred_init 0
#define DT_N_S_memory_9cc00000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_memory_9cc00000_P_wakeup_source 0
#define DT_N_S_memory_9cc00000_P_wakeup_source_EXISTS 1
#define DT_N_S_memory_9cc00000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory_9cc00000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /memory1@40000
 *
 * Node identifier: DT_N_S_memory1_40000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory1_40000_PATH "/memory1@40000"

/* Node's name with unit-address: */
#define DT_N_S_memory1_40000_FULL_NAME "memory1@40000"
#define DT_N_S_memory1_40000_FULL_NAME_UNQUOTED memory1@40000
#define DT_N_S_memory1_40000_FULL_NAME_TOKEN memory1_40000
#define DT_N_S_memory1_40000_FULL_NAME_UPPER_TOKEN MEMORY1_40000

/* Node parent (/) identifier: */
#define DT_N_S_memory1_40000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory1_40000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_memory1_40000_NODELABEL_NUM 1
#define DT_N_S_memory1_40000_FOREACH_NODELABEL(fn) fn(sram1)
#define DT_N_S_memory1_40000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory1_40000_CHILD_NUM 0
#define DT_N_S_memory1_40000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_memory1_40000_FOREACH_CHILD(fn) 
#define DT_N_S_memory1_40000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory1_40000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory1_40000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory1_40000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory1_40000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory1_40000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory1_40000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_memory1_40000_ORD 9
#define DT_N_S_memory1_40000_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory1_40000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory1_40000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory1_40000_EXISTS 1
#define DT_N_INST_1_mmio_sram DT_N_S_memory1_40000
#define DT_N_NODELABEL_sram1  DT_N_S_memory1_40000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory1_40000_REG_NUM 1
#define DT_N_S_memory1_40000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory1_40000_REG_IDX_0_VAL_ADDRESS 262144 /* 0x40000 */
#define DT_N_S_memory1_40000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_memory1_40000_RANGES_NUM 0
#define DT_N_S_memory1_40000_FOREACH_RANGE(fn) 
#define DT_N_S_memory1_40000_IRQ_NUM 0
#define DT_N_S_memory1_40000_IRQ_LEVEL 0
#define DT_N_S_memory1_40000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory1_40000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory1_40000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory1_40000_P_reg {262144 /* 0x40000 */, 65536 /* 0x10000 */}
#define DT_N_S_memory1_40000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory1_40000_P_reg_IDX_0 262144
#define DT_N_S_memory1_40000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory1_40000_P_reg_IDX_1 65536
#define DT_N_S_memory1_40000_P_reg_EXISTS 1
#define DT_N_S_memory1_40000_P_compatible {"mmio-sram"}
#define DT_N_S_memory1_40000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory1_40000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory1_40000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_memory1_40000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_memory1_40000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory1_40000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory1_40000, compatible, 0)
#define DT_N_S_memory1_40000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory1_40000, compatible, 0)
#define DT_N_S_memory1_40000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory1_40000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory1_40000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory1_40000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory1_40000_P_compatible_LEN 1
#define DT_N_S_memory1_40000_P_compatible_EXISTS 1
#define DT_N_S_memory1_40000_P_zephyr_deferred_init 0
#define DT_N_S_memory1_40000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_memory1_40000_P_wakeup_source 0
#define DT_N_S_memory1_40000_P_wakeup_source_EXISTS 1
#define DT_N_S_memory1_40000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory1_40000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pinctrl@4084000
 *
 * Node identifier: DT_N_S_pinctrl_4084000
 *
 * Binding (compatible = ti,k3-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/ti,k3-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pinctrl_4084000_PATH "/pinctrl@4084000"

/* Node's name with unit-address: */
#define DT_N_S_pinctrl_4084000_FULL_NAME "pinctrl@4084000"
#define DT_N_S_pinctrl_4084000_FULL_NAME_UNQUOTED pinctrl@4084000
#define DT_N_S_pinctrl_4084000_FULL_NAME_TOKEN pinctrl_4084000
#define DT_N_S_pinctrl_4084000_FULL_NAME_UPPER_TOKEN PINCTRL_4084000

/* Node parent (/) identifier: */
#define DT_N_S_pinctrl_4084000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_pinctrl_4084000_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_pinctrl_4084000_NODELABEL_NUM 1
#define DT_N_S_pinctrl_4084000_FOREACH_NODELABEL(fn) fn(pinctrl)
#define DT_N_S_pinctrl_4084000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinctrl, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pinctrl_4084000_CHILD_NUM 3
#define DT_N_S_pinctrl_4084000_CHILD_NUM_STATUS_OKAY 3
#define DT_N_S_pinctrl_4084000_FOREACH_CHILD(fn) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default) fn(DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default)
#define DT_N_S_pinctrl_4084000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default)
#define DT_N_S_pinctrl_4084000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default, __VA_ARGS__) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default, __VA_ARGS__) fn(DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default, __VA_ARGS__)
#define DT_N_S_pinctrl_4084000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default, __VA_ARGS__)
#define DT_N_S_pinctrl_4084000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default) fn(DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default)
#define DT_N_S_pinctrl_4084000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default)
#define DT_N_S_pinctrl_4084000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default, __VA_ARGS__) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default, __VA_ARGS__) fn(DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default, __VA_ARGS__)
#define DT_N_S_pinctrl_4084000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pinctrl_4084000_ORD 10
#define DT_N_S_pinctrl_4084000_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pinctrl_4084000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pinctrl_4084000_SUPPORTS_ORDS \
	11, /* /pinctrl@4084000/mcu_uart0_rx_default */ \
	12, /* /pinctrl@4084000/mcu_uart0_tx_default */ \
	17, /* /pinctrl@4084000/mcu_gpio0_led_default */

/* Existence and alternate IDs: */
#define DT_N_S_pinctrl_4084000_EXISTS 1
#define DT_N_INST_0_ti_k3_pinctrl DT_N_S_pinctrl_4084000
#define DT_N_NODELABEL_pinctrl    DT_N_S_pinctrl_4084000

/* Macros for properties that are special in the specification: */
#define DT_N_S_pinctrl_4084000_REG_NUM 1
#define DT_N_S_pinctrl_4084000_REG_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_4084000_REG_IDX_0_VAL_ADDRESS 67649536 /* 0x4084000 */
#define DT_N_S_pinctrl_4084000_REG_IDX_0_VAL_SIZE 136 /* 0x88 */
#define DT_N_S_pinctrl_4084000_RANGES_NUM 0
#define DT_N_S_pinctrl_4084000_FOREACH_RANGE(fn) 
#define DT_N_S_pinctrl_4084000_IRQ_NUM 0
#define DT_N_S_pinctrl_4084000_IRQ_LEVEL 0
#define DT_N_S_pinctrl_4084000_COMPAT_MATCHES_ti_k3_pinctrl 1
#define DT_N_S_pinctrl_4084000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_4084000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_pinctrl_4084000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_4084000_COMPAT_MODEL_IDX_0 "k3-pinctrl"
#define DT_N_S_pinctrl_4084000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pinctrl_4084000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pinctrl_4084000_P_reg {67649536 /* 0x4084000 */, 136 /* 0x88 */}
#define DT_N_S_pinctrl_4084000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_4084000_P_reg_IDX_0 67649536
#define DT_N_S_pinctrl_4084000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_pinctrl_4084000_P_reg_IDX_1 136
#define DT_N_S_pinctrl_4084000_P_reg_EXISTS 1
#define DT_N_S_pinctrl_4084000_P_status "okay"
#define DT_N_S_pinctrl_4084000_P_status_STRING_UNQUOTED okay
#define DT_N_S_pinctrl_4084000_P_status_STRING_TOKEN okay
#define DT_N_S_pinctrl_4084000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_pinctrl_4084000_P_status_IDX_0 "okay"
#define DT_N_S_pinctrl_4084000_P_status_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_4084000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_pinctrl_4084000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_pinctrl_4084000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_4084000, status, 0)
#define DT_N_S_pinctrl_4084000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_4084000, status, 0)
#define DT_N_S_pinctrl_4084000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_4084000, status, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_4084000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_4084000, status, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_4084000_P_status_LEN 1
#define DT_N_S_pinctrl_4084000_P_status_EXISTS 1
#define DT_N_S_pinctrl_4084000_P_compatible {"ti,k3-pinctrl"}
#define DT_N_S_pinctrl_4084000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_4084000_P_compatible_IDX_0 "ti,k3-pinctrl"
#define DT_N_S_pinctrl_4084000_P_compatible_IDX_0_STRING_UNQUOTED ti,k3-pinctrl
#define DT_N_S_pinctrl_4084000_P_compatible_IDX_0_STRING_TOKEN ti_k3_pinctrl
#define DT_N_S_pinctrl_4084000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_K3_PINCTRL
#define DT_N_S_pinctrl_4084000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_4084000, compatible, 0)
#define DT_N_S_pinctrl_4084000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_4084000, compatible, 0)
#define DT_N_S_pinctrl_4084000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_4084000, compatible, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_4084000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_4084000, compatible, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_4084000_P_compatible_LEN 1
#define DT_N_S_pinctrl_4084000_P_compatible_EXISTS 1
#define DT_N_S_pinctrl_4084000_P_zephyr_deferred_init 0
#define DT_N_S_pinctrl_4084000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_pinctrl_4084000_P_wakeup_source 0
#define DT_N_S_pinctrl_4084000_P_wakeup_source_EXISTS 1
#define DT_N_S_pinctrl_4084000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_pinctrl_4084000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pinctrl@4084000/mcu_uart0_rx_default
 *
 * Node identifier: DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_PATH "/pinctrl@4084000/mcu_uart0_rx_default"

/* Node's name with unit-address: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_FULL_NAME "mcu_uart0_rx_default"
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_FULL_NAME_UNQUOTED mcu_uart0_rx_default
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_FULL_NAME_TOKEN mcu_uart0_rx_default
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_FULL_NAME_UPPER_TOKEN MCU_UART0_RX_DEFAULT

/* Node parent (/pinctrl@4084000) identifier: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_PARENT DT_N_S_pinctrl_4084000

/* Node's index in its parent's list of children: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_NODELABEL_NUM 1
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_FOREACH_NODELABEL(fn) fn(mcu_uart0_rx_default)
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(mcu_uart0_rx_default, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_CHILD_NUM 0
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_FOREACH_CHILD(fn) 
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_ORD 11
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_REQUIRES_ORDS \
	10, /* /pinctrl@4084000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_SUPPORTS_ORDS \
	13, /* /serial@4a00000 */

/* Existence and alternate IDs: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_EXISTS 1
#define DT_N_NODELABEL_mcu_uart0_rx_default DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_REG_NUM 0
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_RANGES_NUM 0
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_FOREACH_RANGE(fn) 
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_IRQ_NUM 0
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_IRQ_LEVEL 0
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_P_pinmux {20 /* 0x14 */, 327680 /* 0x50000 */}
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_P_pinmux_IDX_0 20
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_P_pinmux_IDX_1 327680
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default, pinmux, 0) \
	fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default, pinmux, 1)
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default, pinmux, 1)
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_P_pinmux_LEN 2
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default_P_pinmux_EXISTS 1

/*
 * Devicetree node: /pinctrl@4084000/mcu_uart0_tx_default
 *
 * Node identifier: DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_PATH "/pinctrl@4084000/mcu_uart0_tx_default"

/* Node's name with unit-address: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_FULL_NAME "mcu_uart0_tx_default"
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_FULL_NAME_UNQUOTED mcu_uart0_tx_default
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_FULL_NAME_TOKEN mcu_uart0_tx_default
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_FULL_NAME_UPPER_TOKEN MCU_UART0_TX_DEFAULT

/* Node parent (/pinctrl@4084000) identifier: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_PARENT DT_N_S_pinctrl_4084000

/* Node's index in its parent's list of children: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_NODELABEL_NUM 1
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_FOREACH_NODELABEL(fn) fn(mcu_uart0_tx_default)
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(mcu_uart0_tx_default, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_CHILD_NUM 0
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_FOREACH_CHILD(fn) 
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_ORD 12
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_REQUIRES_ORDS \
	10, /* /pinctrl@4084000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_SUPPORTS_ORDS \
	13, /* /serial@4a00000 */

/* Existence and alternate IDs: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_EXISTS 1
#define DT_N_NODELABEL_mcu_uart0_tx_default DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_REG_NUM 0
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_RANGES_NUM 0
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_FOREACH_RANGE(fn) 
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_IRQ_NUM 0
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_IRQ_LEVEL 0
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_P_pinmux {24 /* 0x18 */, 65536 /* 0x10000 */}
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_P_pinmux_IDX_0 24
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_P_pinmux_IDX_1 65536
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default, pinmux, 0) \
	fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default, pinmux, 1)
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default, pinmux, 1)
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_P_pinmux_LEN 2
#define DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default_P_pinmux_EXISTS 1

/*
 * Devicetree node: /serial@4a00000
 *
 * Node identifier: DT_N_S_serial_4a00000
 *
 * Binding (compatible = ns16550):
 *   $ZEPHYR_BASE/dts/bindings/serial/ns16550.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_serial_4a00000_PATH "/serial@4a00000"

/* Node's name with unit-address: */
#define DT_N_S_serial_4a00000_FULL_NAME "serial@4a00000"
#define DT_N_S_serial_4a00000_FULL_NAME_UNQUOTED serial@4a00000
#define DT_N_S_serial_4a00000_FULL_NAME_TOKEN serial_4a00000
#define DT_N_S_serial_4a00000_FULL_NAME_UPPER_TOKEN SERIAL_4A00000

/* Node parent (/) identifier: */
#define DT_N_S_serial_4a00000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_serial_4a00000_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_serial_4a00000_NODELABEL_NUM 1
#define DT_N_S_serial_4a00000_FOREACH_NODELABEL(fn) fn(uart0)
#define DT_N_S_serial_4a00000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_serial_4a00000_CHILD_NUM 0
#define DT_N_S_serial_4a00000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_serial_4a00000_FOREACH_CHILD(fn) 
#define DT_N_S_serial_4a00000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_serial_4a00000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_serial_4a00000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_serial_4a00000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_serial_4a00000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_serial_4a00000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_serial_4a00000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_serial_4a00000_ORD 13
#define DT_N_S_serial_4a00000_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_serial_4a00000_REQUIRES_ORDS \
	0, /* / */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	11, /* /pinctrl@4084000/mcu_uart0_rx_default */ \
	12, /* /pinctrl@4084000/mcu_uart0_tx_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_serial_4a00000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_serial_4a00000_EXISTS 1
#define DT_N_INST_0_ns16550  DT_N_S_serial_4a00000
#define DT_N_NODELABEL_uart0 DT_N_S_serial_4a00000

/* Macros for properties that are special in the specification: */
#define DT_N_S_serial_4a00000_REG_NUM 1
#define DT_N_S_serial_4a00000_REG_IDX_0_EXISTS 1
#define DT_N_S_serial_4a00000_REG_IDX_0_VAL_ADDRESS 77594624 /* 0x4a00000 */
#define DT_N_S_serial_4a00000_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_serial_4a00000_RANGES_NUM 0
#define DT_N_S_serial_4a00000_FOREACH_RANGE(fn) 
#define DT_N_S_serial_4a00000_IRQ_NUM 1
#define DT_N_S_serial_4a00000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_serial_4a00000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_serial_4a00000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_serial_4a00000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_serial_4a00000_IRQ_IDX_0_VAL_priority 4
#define DT_N_S_serial_4a00000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_serial_4a00000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_serial_4a00000_IRQ_LEVEL 1
#define DT_N_S_serial_4a00000_COMPAT_MATCHES_ns16550 1
#define DT_N_S_serial_4a00000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_serial_4a00000_PINCTRL_NUM 1
#define DT_N_S_serial_4a00000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_serial_4a00000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_serial_4a00000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_serial_4a00000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_serial_4a00000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_serial_4a00000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default
#define DT_N_S_serial_4a00000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default

/* Generic property macros: */
#define DT_N_S_serial_4a00000_P_reg_shift 2
#define DT_N_S_serial_4a00000_P_reg_shift_EXISTS 1
#define DT_N_S_serial_4a00000_P_io_mapped 0
#define DT_N_S_serial_4a00000_P_io_mapped_EXISTS 1
#define DT_N_S_serial_4a00000_P_clock_frequency 48000000
#define DT_N_S_serial_4a00000_P_clock_frequency_EXISTS 1
#define DT_N_S_serial_4a00000_P_current_speed 115200
#define DT_N_S_serial_4a00000_P_current_speed_EXISTS 1
#define DT_N_S_serial_4a00000_P_hw_flow_control 0
#define DT_N_S_serial_4a00000_P_hw_flow_control_EXISTS 1
#define DT_N_S_serial_4a00000_P_status "okay"
#define DT_N_S_serial_4a00000_P_status_STRING_UNQUOTED okay
#define DT_N_S_serial_4a00000_P_status_STRING_TOKEN okay
#define DT_N_S_serial_4a00000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_serial_4a00000_P_status_IDX_0 "okay"
#define DT_N_S_serial_4a00000_P_status_IDX_0_EXISTS 1
#define DT_N_S_serial_4a00000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_serial_4a00000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_serial_4a00000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_serial_4a00000, status, 0)
#define DT_N_S_serial_4a00000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_serial_4a00000, status, 0)
#define DT_N_S_serial_4a00000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_serial_4a00000, status, 0, __VA_ARGS__)
#define DT_N_S_serial_4a00000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_serial_4a00000, status, 0, __VA_ARGS__)
#define DT_N_S_serial_4a00000_P_status_LEN 1
#define DT_N_S_serial_4a00000_P_status_EXISTS 1
#define DT_N_S_serial_4a00000_P_compatible {"ns16550"}
#define DT_N_S_serial_4a00000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_serial_4a00000_P_compatible_IDX_0 "ns16550"
#define DT_N_S_serial_4a00000_P_compatible_IDX_0_STRING_UNQUOTED ns16550
#define DT_N_S_serial_4a00000_P_compatible_IDX_0_STRING_TOKEN ns16550
#define DT_N_S_serial_4a00000_P_compatible_IDX_0_STRING_UPPER_TOKEN NS16550
#define DT_N_S_serial_4a00000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_serial_4a00000, compatible, 0)
#define DT_N_S_serial_4a00000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_serial_4a00000, compatible, 0)
#define DT_N_S_serial_4a00000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_serial_4a00000, compatible, 0, __VA_ARGS__)
#define DT_N_S_serial_4a00000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_serial_4a00000, compatible, 0, __VA_ARGS__)
#define DT_N_S_serial_4a00000_P_compatible_LEN 1
#define DT_N_S_serial_4a00000_P_compatible_EXISTS 1
#define DT_N_S_serial_4a00000_P_reg {77594624 /* 0x4a00000 */, 512 /* 0x200 */}
#define DT_N_S_serial_4a00000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_serial_4a00000_P_reg_IDX_0 77594624
#define DT_N_S_serial_4a00000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_serial_4a00000_P_reg_IDX_1 512
#define DT_N_S_serial_4a00000_P_reg_EXISTS 1
#define DT_N_S_serial_4a00000_P_interrupts {24 /* 0x18 */, 4 /* 0x4 */}
#define DT_N_S_serial_4a00000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_serial_4a00000_P_interrupts_IDX_0 24
#define DT_N_S_serial_4a00000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_serial_4a00000_P_interrupts_IDX_1 4
#define DT_N_S_serial_4a00000_P_interrupts_EXISTS 1
#define DT_N_S_serial_4a00000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_serial_4a00000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_serial_4a00000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_serial_4a00000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_serial_4a00000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_serial_4a00000, interrupt_parent, 0)
#define DT_N_S_serial_4a00000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_serial_4a00000, interrupt_parent, 0)
#define DT_N_S_serial_4a00000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_serial_4a00000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_serial_4a00000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_serial_4a00000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_serial_4a00000_P_interrupt_parent_LEN 1
#define DT_N_S_serial_4a00000_P_interrupt_parent_EXISTS 1
#define DT_N_S_serial_4a00000_P_zephyr_deferred_init 0
#define DT_N_S_serial_4a00000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_serial_4a00000_P_wakeup_source 0
#define DT_N_S_serial_4a00000_P_wakeup_source_EXISTS 1
#define DT_N_S_serial_4a00000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_serial_4a00000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_serial_4a00000_P_pinctrl_0_IDX_0 DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default
#define DT_N_S_serial_4a00000_P_pinctrl_0_IDX_0_PH DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default
#define DT_N_S_serial_4a00000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_serial_4a00000_P_pinctrl_0_IDX_1 DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default
#define DT_N_S_serial_4a00000_P_pinctrl_0_IDX_1_PH DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default
#define DT_N_S_serial_4a00000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_serial_4a00000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_serial_4a00000, pinctrl_0, 0) \
	fn(DT_N_S_serial_4a00000, pinctrl_0, 1)
#define DT_N_S_serial_4a00000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_serial_4a00000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_serial_4a00000, pinctrl_0, 1)
#define DT_N_S_serial_4a00000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_serial_4a00000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_serial_4a00000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_serial_4a00000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_serial_4a00000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_serial_4a00000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_serial_4a00000_P_pinctrl_0_LEN 2
#define DT_N_S_serial_4a00000_P_pinctrl_0_EXISTS 1
#define DT_N_S_serial_4a00000_P_pinctrl_names {"default"}
#define DT_N_S_serial_4a00000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_serial_4a00000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_serial_4a00000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_serial_4a00000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_serial_4a00000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_serial_4a00000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_serial_4a00000, pinctrl_names, 0)
#define DT_N_S_serial_4a00000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_serial_4a00000, pinctrl_names, 0)
#define DT_N_S_serial_4a00000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_serial_4a00000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_serial_4a00000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_serial_4a00000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_serial_4a00000_P_pinctrl_names_LEN 1
#define DT_N_S_serial_4a00000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /system-clock
 *
 * Node identifier: DT_N_S_system_clock
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_system_clock_PATH "/system-clock"

/* Node's name with unit-address: */
#define DT_N_S_system_clock_FULL_NAME "system-clock"
#define DT_N_S_system_clock_FULL_NAME_UNQUOTED system-clock
#define DT_N_S_system_clock_FULL_NAME_TOKEN system_clock
#define DT_N_S_system_clock_FULL_NAME_UPPER_TOKEN SYSTEM_CLOCK

/* Node parent (/) identifier: */
#define DT_N_S_system_clock_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_system_clock_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_system_clock_NODELABEL_NUM 1
#define DT_N_S_system_clock_FOREACH_NODELABEL(fn) fn(sysclk)
#define DT_N_S_system_clock_FOREACH_NODELABEL_VARGS(fn, ...) fn(sysclk, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_system_clock_CHILD_NUM 0
#define DT_N_S_system_clock_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_system_clock_FOREACH_CHILD(fn) 
#define DT_N_S_system_clock_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_system_clock_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_system_clock_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_system_clock_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_system_clock_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_system_clock_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_system_clock_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_system_clock_ORD 14
#define DT_N_S_system_clock_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_system_clock_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_system_clock_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_system_clock_EXISTS 1
#define DT_N_INST_0_fixed_clock DT_N_S_system_clock
#define DT_N_NODELABEL_sysclk   DT_N_S_system_clock

/* Macros for properties that are special in the specification: */
#define DT_N_S_system_clock_REG_NUM 0
#define DT_N_S_system_clock_RANGES_NUM 0
#define DT_N_S_system_clock_FOREACH_RANGE(fn) 
#define DT_N_S_system_clock_IRQ_NUM 0
#define DT_N_S_system_clock_IRQ_LEVEL 0
#define DT_N_S_system_clock_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_system_clock_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_system_clock_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_system_clock_P_clock_frequency 400000000
#define DT_N_S_system_clock_P_clock_frequency_EXISTS 1
#define DT_N_S_system_clock_P_compatible {"fixed-clock"}
#define DT_N_S_system_clock_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_system_clock_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_system_clock_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_system_clock_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_system_clock_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_system_clock_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_system_clock, compatible, 0)
#define DT_N_S_system_clock_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_system_clock, compatible, 0)
#define DT_N_S_system_clock_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_system_clock, compatible, 0, __VA_ARGS__)
#define DT_N_S_system_clock_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_system_clock, compatible, 0, __VA_ARGS__)
#define DT_N_S_system_clock_P_compatible_LEN 1
#define DT_N_S_system_clock_P_compatible_EXISTS 1
#define DT_N_S_system_clock_P_zephyr_deferred_init 0
#define DT_N_S_system_clock_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_system_clock_P_wakeup_source 0
#define DT_N_S_system_clock_P_wakeup_source_EXISTS 1
#define DT_N_S_system_clock_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_system_clock_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"
#define DT_N_S_cpus_FULL_NAME_UNQUOTED cpus
#define DT_N_S_cpus_FULL_NAME_TOKEN cpus
#define DT_N_S_cpus_FULL_NAME_UPPER_TOKEN CPUS

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_NODELABEL_NUM 0
#define DT_N_S_cpus_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_CHILD_NUM 1
#define DT_N_S_cpus_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 15
#define DT_N_S_cpus_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	16, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_IRQ_LEVEL 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4f):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m4f.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UNQUOTED cpu@0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_TOKEN cpu_0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UPPER_TOKEN CPU_0

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_0_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL(fn) fn(cpu0)
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(cpu0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 16
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	15, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4f DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0        DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4f 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency 400000000
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_status "okay"
#define DT_N_S_cpus_S_cpu_0_P_status_STRING_UNQUOTED okay
#define DT_N_S_cpus_S_cpu_0_P_status_STRING_TOKEN okay
#define DT_N_S_cpus_S_cpu_0_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_cpus_S_cpu_0_P_status_IDX_0 "okay"
#define DT_N_S_cpus_S_cpu_0_P_status_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_cpus_S_cpu_0_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, status, 0)
#define DT_N_S_cpus_S_cpu_0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, status, 0)
#define DT_N_S_cpus_S_cpu_0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, status, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, status, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_status_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_status_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4f"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m4f
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m4f
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M4F
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pinctrl@4084000/mcu_gpio0_led_default
 *
 * Node identifier: DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_PATH "/pinctrl@4084000/mcu_gpio0_led_default"

/* Node's name with unit-address: */
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_FULL_NAME "mcu_gpio0_led_default"
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_FULL_NAME_UNQUOTED mcu_gpio0_led_default
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_FULL_NAME_TOKEN mcu_gpio0_led_default
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_FULL_NAME_UPPER_TOKEN MCU_GPIO0_LED_DEFAULT

/* Node parent (/pinctrl@4084000) identifier: */
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_PARENT DT_N_S_pinctrl_4084000

/* Node's index in its parent's list of children: */
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_NODELABEL_NUM 1
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_FOREACH_NODELABEL(fn) fn(mcu_gpio0_led_default)
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(mcu_gpio0_led_default, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_CHILD_NUM 0
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_FOREACH_CHILD(fn) 
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_ORD 17
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_REQUIRES_ORDS \
	10, /* /pinctrl@4084000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_SUPPORTS_ORDS \
	18, /* /gpio@4201010 */

/* Existence and alternate IDs: */
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_EXISTS 1
#define DT_N_NODELABEL_mcu_gpio0_led_default DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_REG_NUM 0
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_RANGES_NUM 0
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_FOREACH_RANGE(fn) 
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_IRQ_NUM 0
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_IRQ_LEVEL 0
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_P_pinmux {0 /* 0x0 */, 65543 /* 0x10007 */}
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_P_pinmux_IDX_0 0
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_P_pinmux_IDX_1 65543
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default, pinmux, 0) \
	fn(DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default, pinmux, 1)
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default, pinmux, 1)
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_P_pinmux_LEN 2
#define DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default_P_pinmux_EXISTS 1

/*
 * Devicetree node: /gpio@4201010
 *
 * Node identifier: DT_N_S_gpio_4201010
 *
 * Binding (compatible = ti,davinci-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/ti,davinci-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_4201010_PATH "/gpio@4201010"

/* Node's name with unit-address: */
#define DT_N_S_gpio_4201010_FULL_NAME "gpio@4201010"
#define DT_N_S_gpio_4201010_FULL_NAME_UNQUOTED gpio@4201010
#define DT_N_S_gpio_4201010_FULL_NAME_TOKEN gpio_4201010
#define DT_N_S_gpio_4201010_FULL_NAME_UPPER_TOKEN GPIO_4201010

/* Node parent (/) identifier: */
#define DT_N_S_gpio_4201010_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_4201010_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio_4201010_NODELABEL_NUM 1
#define DT_N_S_gpio_4201010_FOREACH_NODELABEL(fn) fn(gpio0)
#define DT_N_S_gpio_4201010_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_4201010_CHILD_NUM 0
#define DT_N_S_gpio_4201010_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_gpio_4201010_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_4201010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_4201010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_4201010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_4201010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_4201010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_4201010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_4201010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_4201010_ORD 18
#define DT_N_S_gpio_4201010_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_4201010_REQUIRES_ORDS \
	0, /* / */ \
	17, /* /pinctrl@4084000/mcu_gpio0_led_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_4201010_SUPPORTS_ORDS \
	19, /* /leds */ \
	20, /* /leds/led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_4201010_EXISTS 1
#define DT_N_INST_0_ti_davinci_gpio DT_N_S_gpio_4201010
#define DT_N_NODELABEL_gpio0        DT_N_S_gpio_4201010

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_4201010_REG_NUM 1
#define DT_N_S_gpio_4201010_REG_IDX_0_EXISTS 1
#define DT_N_S_gpio_4201010_REG_IDX_0_VAL_ADDRESS 69210128 /* 0x4201010 */
#define DT_N_S_gpio_4201010_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_gpio_4201010_RANGES_NUM 0
#define DT_N_S_gpio_4201010_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_4201010_IRQ_NUM 0
#define DT_N_S_gpio_4201010_IRQ_LEVEL 0
#define DT_N_S_gpio_4201010_COMPAT_MATCHES_ti_davinci_gpio 1
#define DT_N_S_gpio_4201010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_gpio_4201010_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_gpio_4201010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_gpio_4201010_COMPAT_MODEL_IDX_0 "davinci-gpio"
#define DT_N_S_gpio_4201010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_4201010_PINCTRL_NUM 1
#define DT_N_S_gpio_4201010_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_gpio_4201010_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_gpio_4201010_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_gpio_4201010_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_gpio_4201010_PINCTRL_NAME_default_IDX 0
#define DT_N_S_gpio_4201010_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default

/* Generic property macros: */
#define DT_N_S_gpio_4201010_P_reg {69210128 /* 0x4201010 */, 256 /* 0x100 */}
#define DT_N_S_gpio_4201010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_gpio_4201010_P_reg_IDX_0 69210128
#define DT_N_S_gpio_4201010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_gpio_4201010_P_reg_IDX_1 256
#define DT_N_S_gpio_4201010_P_reg_EXISTS 1
#define DT_N_S_gpio_4201010_P_status "okay"
#define DT_N_S_gpio_4201010_P_status_STRING_UNQUOTED okay
#define DT_N_S_gpio_4201010_P_status_STRING_TOKEN okay
#define DT_N_S_gpio_4201010_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_gpio_4201010_P_status_IDX_0 "okay"
#define DT_N_S_gpio_4201010_P_status_IDX_0_EXISTS 1
#define DT_N_S_gpio_4201010_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_gpio_4201010_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_gpio_4201010_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_4201010, status, 0)
#define DT_N_S_gpio_4201010_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_4201010, status, 0)
#define DT_N_S_gpio_4201010_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_4201010, status, 0, __VA_ARGS__)
#define DT_N_S_gpio_4201010_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_4201010, status, 0, __VA_ARGS__)
#define DT_N_S_gpio_4201010_P_status_LEN 1
#define DT_N_S_gpio_4201010_P_status_EXISTS 1
#define DT_N_S_gpio_4201010_P_compatible {"ti,davinci-gpio"}
#define DT_N_S_gpio_4201010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_4201010_P_compatible_IDX_0 "ti,davinci-gpio"
#define DT_N_S_gpio_4201010_P_compatible_IDX_0_STRING_UNQUOTED ti,davinci-gpio
#define DT_N_S_gpio_4201010_P_compatible_IDX_0_STRING_TOKEN ti_davinci_gpio
#define DT_N_S_gpio_4201010_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_DAVINCI_GPIO
#define DT_N_S_gpio_4201010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_4201010, compatible, 0)
#define DT_N_S_gpio_4201010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_4201010, compatible, 0)
#define DT_N_S_gpio_4201010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_4201010, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_4201010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_4201010, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_4201010_P_compatible_LEN 1
#define DT_N_S_gpio_4201010_P_compatible_EXISTS 1
#define DT_N_S_gpio_4201010_P_zephyr_deferred_init 0
#define DT_N_S_gpio_4201010_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_gpio_4201010_P_wakeup_source 0
#define DT_N_S_gpio_4201010_P_wakeup_source_EXISTS 1
#define DT_N_S_gpio_4201010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_gpio_4201010_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_gpio_4201010_P_gpio_controller 1
#define DT_N_S_gpio_4201010_P_gpio_controller_EXISTS 1
#define DT_N_S_gpio_4201010_P_ngpios 24
#define DT_N_S_gpio_4201010_P_ngpios_EXISTS 1
#define DT_N_S_gpio_4201010_P_pinctrl_0_IDX_0 DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default
#define DT_N_S_gpio_4201010_P_pinctrl_0_IDX_0_PH DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default
#define DT_N_S_gpio_4201010_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_gpio_4201010_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_4201010, pinctrl_0, 0)
#define DT_N_S_gpio_4201010_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_4201010, pinctrl_0, 0)
#define DT_N_S_gpio_4201010_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_4201010, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_gpio_4201010_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_4201010, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_gpio_4201010_P_pinctrl_0_LEN 1
#define DT_N_S_gpio_4201010_P_pinctrl_0_EXISTS 1
#define DT_N_S_gpio_4201010_P_pinctrl_names {"default"}
#define DT_N_S_gpio_4201010_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_gpio_4201010_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_gpio_4201010_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_gpio_4201010_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_gpio_4201010_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_gpio_4201010_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_4201010, pinctrl_names, 0)
#define DT_N_S_gpio_4201010_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_4201010, pinctrl_names, 0)
#define DT_N_S_gpio_4201010_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_4201010, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_gpio_4201010_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_4201010, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_gpio_4201010_P_pinctrl_names_LEN 1
#define DT_N_S_gpio_4201010_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"
#define DT_N_S_leds_FULL_NAME_UNQUOTED leds
#define DT_N_S_leds_FULL_NAME_TOKEN leds
#define DT_N_S_leds_FULL_NAME_UPPER_TOKEN LEDS

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_NODELABEL_NUM 1
#define DT_N_S_leds_FOREACH_NODELABEL(fn) fn(leds)
#define DT_N_S_leds_FOREACH_NODELABEL_VARGS(fn, ...) fn(leds, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_CHILD_NUM 1
#define DT_N_S_leds_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 19
#define DT_N_S_leds_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */ \
	18, /* /gpio@4201010 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	20, /* /leds/led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds
#define DT_N_NODELABEL_leds   DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_IRQ_LEVEL 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/led_0
 *
 * Node identifier: DT_N_S_leds_S_led_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_0_PATH "/leds/led_0"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_0_FULL_NAME "led_0"
#define DT_N_S_leds_S_led_0_FULL_NAME_UNQUOTED led_0
#define DT_N_S_leds_S_led_0_FULL_NAME_TOKEN led_0
#define DT_N_S_leds_S_led_0_FULL_NAME_UPPER_TOKEN LED_0

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_0_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_0_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_0_FOREACH_NODELABEL(fn) fn(heartbeat_led)
#define DT_N_S_leds_S_led_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(heartbeat_led, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_0_CHILD_NUM 0
#define DT_N_S_leds_S_led_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_0_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_0_ORD 20
#define DT_N_S_leds_S_led_0_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_0_REQUIRES_ORDS \
	18, /* /gpio@4201010 */ \
	19, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_0_EXISTS 1
#define DT_N_ALIAS_led0              DT_N_S_leds_S_led_0
#define DT_N_NODELABEL_heartbeat_led DT_N_S_leds_S_led_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_0_REG_NUM 0
#define DT_N_S_leds_S_led_0_RANGES_NUM 0
#define DT_N_S_leds_S_led_0_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_0_IRQ_NUM 0
#define DT_N_S_leds_S_led_0_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_PH DT_N_S_gpio_4201010
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin 0
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_LEN 1
#define DT_N_S_leds_S_led_0_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label "Heartbeat LED"
#define DT_N_S_leds_S_led_0_P_label_STRING_UNQUOTED Heartbeat LED
#define DT_N_S_leds_S_led_0_P_label_STRING_TOKEN Heartbeat_LED
#define DT_N_S_leds_S_led_0_P_label_STRING_UPPER_TOKEN HEARTBEAT_LED
#define DT_N_S_leds_S_led_0_P_label_IDX_0 "Heartbeat LED"
#define DT_N_S_leds_S_led_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, label, 0)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_0, label, 0)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_label_LEN 1
#define DT_N_S_leds_S_led_0_P_label_EXISTS 1

/*
 * Devicetree node: /reserved-memory
 *
 * Node identifier: DT_N_S_reserved_memory
 */

/* Node's full path: */
#define DT_N_S_reserved_memory_PATH "/reserved-memory"

/* Node's name with unit-address: */
#define DT_N_S_reserved_memory_FULL_NAME "reserved-memory"
#define DT_N_S_reserved_memory_FULL_NAME_UNQUOTED reserved-memory
#define DT_N_S_reserved_memory_FULL_NAME_TOKEN reserved_memory
#define DT_N_S_reserved_memory_FULL_NAME_UPPER_TOKEN RESERVED_MEMORY

/* Node parent (/) identifier: */
#define DT_N_S_reserved_memory_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_reserved_memory_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_reserved_memory_NODELABEL_NUM 0
#define DT_N_S_reserved_memory_FOREACH_NODELABEL(fn) 
#define DT_N_S_reserved_memory_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_reserved_memory_CHILD_NUM 1
#define DT_N_S_reserved_memory_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_reserved_memory_FOREACH_CHILD(fn) fn(DT_N_S_reserved_memory_S_memory_9cb00000)
#define DT_N_S_reserved_memory_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_reserved_memory_S_memory_9cb00000)
#define DT_N_S_reserved_memory_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_reserved_memory_S_memory_9cb00000, __VA_ARGS__)
#define DT_N_S_reserved_memory_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_reserved_memory_S_memory_9cb00000, __VA_ARGS__)
#define DT_N_S_reserved_memory_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_reserved_memory_S_memory_9cb00000)
#define DT_N_S_reserved_memory_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_reserved_memory_S_memory_9cb00000)
#define DT_N_S_reserved_memory_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_reserved_memory_S_memory_9cb00000, __VA_ARGS__)
#define DT_N_S_reserved_memory_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_reserved_memory_S_memory_9cb00000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_reserved_memory_ORD 21
#define DT_N_S_reserved_memory_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_reserved_memory_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_reserved_memory_SUPPORTS_ORDS \
	22, /* /reserved-memory/memory@9cb00000 */

/* Existence and alternate IDs: */
#define DT_N_S_reserved_memory_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_reserved_memory_REG_NUM 0
#define DT_N_S_reserved_memory_RANGES_NUM 0
#define DT_N_S_reserved_memory_FOREACH_RANGE(fn) 
#define DT_N_S_reserved_memory_IRQ_NUM 0
#define DT_N_S_reserved_memory_IRQ_LEVEL 0
#define DT_N_S_reserved_memory_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_reserved_memory_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_reserved_memory_P_ranges_EXISTS 1

/*
 * Devicetree node: /reserved-memory/memory@9cb00000
 *
 * Node identifier: DT_N_S_reserved_memory_S_memory_9cb00000
 */

/* Node's full path: */
#define DT_N_S_reserved_memory_S_memory_9cb00000_PATH "/reserved-memory/memory@9cb00000"

/* Node's name with unit-address: */
#define DT_N_S_reserved_memory_S_memory_9cb00000_FULL_NAME "memory@9cb00000"
#define DT_N_S_reserved_memory_S_memory_9cb00000_FULL_NAME_UNQUOTED memory@9cb00000
#define DT_N_S_reserved_memory_S_memory_9cb00000_FULL_NAME_TOKEN memory_9cb00000
#define DT_N_S_reserved_memory_S_memory_9cb00000_FULL_NAME_UPPER_TOKEN MEMORY_9CB00000

/* Node parent (/reserved-memory) identifier: */
#define DT_N_S_reserved_memory_S_memory_9cb00000_PARENT DT_N_S_reserved_memory

/* Node's index in its parent's list of children: */
#define DT_N_S_reserved_memory_S_memory_9cb00000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_reserved_memory_S_memory_9cb00000_NODELABEL_NUM 1
#define DT_N_S_reserved_memory_S_memory_9cb00000_FOREACH_NODELABEL(fn) fn(mcu_m4fss_dma_memory_region)
#define DT_N_S_reserved_memory_S_memory_9cb00000_FOREACH_NODELABEL_VARGS(fn, ...) fn(mcu_m4fss_dma_memory_region, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_reserved_memory_S_memory_9cb00000_CHILD_NUM 0
#define DT_N_S_reserved_memory_S_memory_9cb00000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_reserved_memory_S_memory_9cb00000_FOREACH_CHILD(fn) 
#define DT_N_S_reserved_memory_S_memory_9cb00000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_reserved_memory_S_memory_9cb00000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_reserved_memory_S_memory_9cb00000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_reserved_memory_S_memory_9cb00000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_reserved_memory_S_memory_9cb00000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_reserved_memory_S_memory_9cb00000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_reserved_memory_S_memory_9cb00000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_reserved_memory_S_memory_9cb00000_ORD 22
#define DT_N_S_reserved_memory_S_memory_9cb00000_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_reserved_memory_S_memory_9cb00000_REQUIRES_ORDS \
	21, /* /reserved-memory */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_reserved_memory_S_memory_9cb00000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_reserved_memory_S_memory_9cb00000_EXISTS 1
#define DT_N_INST_0_shared_dma_pool                DT_N_S_reserved_memory_S_memory_9cb00000
#define DT_N_NODELABEL_mcu_m4fss_dma_memory_region DT_N_S_reserved_memory_S_memory_9cb00000

/* Macros for properties that are special in the specification: */
#define DT_N_S_reserved_memory_S_memory_9cb00000_REG_NUM 1
#define DT_N_S_reserved_memory_S_memory_9cb00000_REG_IDX_0_EXISTS 1
#define DT_N_S_reserved_memory_S_memory_9cb00000_REG_IDX_0_VAL_ADDRESS 2628780032 /* 0x9cb00000 */
#define DT_N_S_reserved_memory_S_memory_9cb00000_REG_IDX_0_VAL_SIZE 1048576 /* 0x100000 */
#define DT_N_S_reserved_memory_S_memory_9cb00000_RANGES_NUM 0
#define DT_N_S_reserved_memory_S_memory_9cb00000_FOREACH_RANGE(fn) 
#define DT_N_S_reserved_memory_S_memory_9cb00000_IRQ_NUM 0
#define DT_N_S_reserved_memory_S_memory_9cb00000_IRQ_LEVEL 0
#define DT_N_S_reserved_memory_S_memory_9cb00000_COMPAT_MATCHES_shared_dma_pool 1
#define DT_N_S_reserved_memory_S_memory_9cb00000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_reserved_memory_S_memory_9cb00000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_reserved_memory_S_memory_9cb00000_P_compatible {"shared-dma-pool"}
#define DT_N_S_reserved_memory_S_memory_9cb00000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_reserved_memory_S_memory_9cb00000_P_compatible_IDX_0 "shared-dma-pool"
#define DT_N_S_reserved_memory_S_memory_9cb00000_P_compatible_IDX_0_STRING_UNQUOTED shared-dma-pool
#define DT_N_S_reserved_memory_S_memory_9cb00000_P_compatible_IDX_0_STRING_TOKEN shared_dma_pool
#define DT_N_S_reserved_memory_S_memory_9cb00000_P_compatible_IDX_0_STRING_UPPER_TOKEN SHARED_DMA_POOL
#define DT_N_S_reserved_memory_S_memory_9cb00000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_reserved_memory_S_memory_9cb00000, compatible, 0)
#define DT_N_S_reserved_memory_S_memory_9cb00000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_reserved_memory_S_memory_9cb00000, compatible, 0)
#define DT_N_S_reserved_memory_S_memory_9cb00000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_reserved_memory_S_memory_9cb00000, compatible, 0, __VA_ARGS__)
#define DT_N_S_reserved_memory_S_memory_9cb00000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_reserved_memory_S_memory_9cb00000, compatible, 0, __VA_ARGS__)
#define DT_N_S_reserved_memory_S_memory_9cb00000_P_compatible_LEN 1
#define DT_N_S_reserved_memory_S_memory_9cb00000_P_compatible_EXISTS 1
#define DT_N_S_reserved_memory_S_memory_9cb00000_P_reg {2628780032 /* 0x9cb00000 */, 1048576 /* 0x100000 */}
#define DT_N_S_reserved_memory_S_memory_9cb00000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_reserved_memory_S_memory_9cb00000_P_reg_IDX_0 2628780032
#define DT_N_S_reserved_memory_S_memory_9cb00000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_reserved_memory_S_memory_9cb00000_P_reg_IDX_1 1048576
#define DT_N_S_reserved_memory_S_memory_9cb00000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv7m-systick):
 *   $ZEPHYR_BASE/dts/bindings/timer/arm,armv7m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_UNQUOTED timer@e000e010
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_TOKEN timer_e000e010
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_UPPER_TOKEN TIMER_E000E010

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_e000e010_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL(fn) fn(systick)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL_VARGS(fn, ...) fn(systick, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM 0
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 23
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_IRQ_LEVEL 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status "okay"
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_e000e010_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timer_e000e010_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_timer_e000e010_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, status, 0)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, status, 0)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_status_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_sram              DT_N_S_memory_0
#define DT_CHOSEN_zephyr_sram_EXISTS       1
#define DT_CHOSEN_zephyr_console           DT_N_S_serial_4a00000
#define DT_CHOSEN_zephyr_console_EXISTS    1
#define DT_CHOSEN_zephyr_shell_uart        DT_N_S_serial_4a00000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS 1
#define DT_CHOSEN_zephyr_sram1             DT_N_S_memory_9cc00000
#define DT_CHOSEN_zephyr_sram1_EXISTS      1
#define DT_CHOSEN_zephyr_ipc_shm           DT_N_S_reserved_memory_S_memory_9cb00000
#define DT_CHOSEN_zephyr_ipc_shm_EXISTS    1
#define DT_CHOSEN_zephyr_ipc               DT_N_S_mailbox0_a9000000
#define DT_CHOSEN_zephyr_ipc_EXISTS        1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_memory_0) fn(DT_N_S_memory1_40000) fn(DT_N_S_system_clock) fn(DT_N_S_mailbox0_a9000000) fn(DT_N_S_pinctrl_4084000) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default) fn(DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default) fn(DT_N_S_serial_4a00000) fn(DT_N_S_gpio_4201010) fn(DT_N_S_memory_9cc00000) fn(DT_N_S_reserved_memory) fn(DT_N_S_reserved_memory_S_memory_9cb00000) fn(DT_N_S_mbox_consumer) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_memory_0) fn(DT_N_S_memory1_40000) fn(DT_N_S_system_clock) fn(DT_N_S_mailbox0_a9000000) fn(DT_N_S_pinctrl_4084000) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default) fn(DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default) fn(DT_N_S_serial_4a00000) fn(DT_N_S_gpio_4201010) fn(DT_N_S_memory_9cc00000) fn(DT_N_S_reserved_memory) fn(DT_N_S_reserved_memory_S_memory_9cb00000) fn(DT_N_S_mbox_consumer) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_memory_0, __VA_ARGS__) fn(DT_N_S_memory1_40000, __VA_ARGS__) fn(DT_N_S_system_clock, __VA_ARGS__) fn(DT_N_S_mailbox0_a9000000, __VA_ARGS__) fn(DT_N_S_pinctrl_4084000, __VA_ARGS__) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default, __VA_ARGS__) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default, __VA_ARGS__) fn(DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default, __VA_ARGS__) fn(DT_N_S_serial_4a00000, __VA_ARGS__) fn(DT_N_S_gpio_4201010, __VA_ARGS__) fn(DT_N_S_memory_9cc00000, __VA_ARGS__) fn(DT_N_S_reserved_memory, __VA_ARGS__) fn(DT_N_S_reserved_memory_S_memory_9cb00000, __VA_ARGS__) fn(DT_N_S_mbox_consumer, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_memory_0, __VA_ARGS__) fn(DT_N_S_memory1_40000, __VA_ARGS__) fn(DT_N_S_system_clock, __VA_ARGS__) fn(DT_N_S_mailbox0_a9000000, __VA_ARGS__) fn(DT_N_S_pinctrl_4084000, __VA_ARGS__) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_rx_default, __VA_ARGS__) fn(DT_N_S_pinctrl_4084000_S_mcu_uart0_tx_default, __VA_ARGS__) fn(DT_N_S_pinctrl_4084000_S_mcu_gpio0_led_default, __VA_ARGS__) fn(DT_N_S_serial_4a00000, __VA_ARGS__) fn(DT_N_S_gpio_4201010, __VA_ARGS__) fn(DT_N_S_memory_9cc00000, __VA_ARGS__) fn(DT_N_S_reserved_memory, __VA_ARGS__) fn(DT_N_S_reserved_memory_S_memory_9cb00000, __VA_ARGS__) fn(DT_N_S_mbox_consumer, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_phytec_phyboard_lyra_am62xx_m4 1
#define DT_COMPAT_HAS_OKAY_ti_am625 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_systick 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4f 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_fixed_clock 1
#define DT_COMPAT_HAS_OKAY_ti_omap_mailbox 1
#define DT_COMPAT_HAS_OKAY_ti_k3_pinctrl 1
#define DT_COMPAT_HAS_OKAY_ns16550 1
#define DT_COMPAT_HAS_OKAY_ti_davinci_gpio 1
#define DT_COMPAT_HAS_OKAY_zephyr_memory_region 1
#define DT_COMPAT_HAS_OKAY_shared_dma_pool 1
#define DT_COMPAT_HAS_OKAY_vnd_mbox_consumer 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_phytec_phyboard_lyra_am62xx_m4_NUM_OKAY 1
#define DT_N_INST_ti_am625_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_systick_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4f_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 3
#define DT_N_INST_fixed_clock_NUM_OKAY 1
#define DT_N_INST_ti_omap_mailbox_NUM_OKAY 1
#define DT_N_INST_ti_k3_pinctrl_NUM_OKAY 1
#define DT_N_INST_ns16550_NUM_OKAY 1
#define DT_N_INST_ti_davinci_gpio_NUM_OKAY 1
#define DT_N_INST_zephyr_memory_region_NUM_OKAY 1
#define DT_N_INST_shared_dma_pool_NUM_OKAY 1
#define DT_N_INST_vnd_mbox_consumer_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_FOREACH_OKAY_phytec_phyboard_lyra_am62xx_m4(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_phytec_phyboard_lyra_am62xx_m4(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_phytec_phyboard_lyra_am62xx_m4(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_phytec_phyboard_lyra_am62xx_m4(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_am625(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_ti_am625(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_am625(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ti_am625(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v7m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v7m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v7m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv7m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv7m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv7m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv7m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m4f(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m4f(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m4f(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_memory_0) fn(DT_N_S_memory1_40000) fn(DT_N_S_memory_9cc00000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_memory_0, __VA_ARGS__) fn(DT_N_S_memory1_40000, __VA_ARGS__) fn(DT_N_S_memory_9cc00000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_clock(fn) fn(DT_N_S_system_clock)
#define DT_FOREACH_OKAY_VARGS_fixed_clock(fn, ...) fn(DT_N_S_system_clock, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_omap_mailbox(fn) fn(DT_N_S_mailbox0_a9000000)
#define DT_FOREACH_OKAY_VARGS_ti_omap_mailbox(fn, ...) fn(DT_N_S_mailbox0_a9000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_omap_mailbox(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ti_omap_mailbox(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_k3_pinctrl(fn) fn(DT_N_S_pinctrl_4084000)
#define DT_FOREACH_OKAY_VARGS_ti_k3_pinctrl(fn, ...) fn(DT_N_S_pinctrl_4084000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_k3_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ti_k3_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ns16550(fn) fn(DT_N_S_serial_4a00000)
#define DT_FOREACH_OKAY_VARGS_ns16550(fn, ...) fn(DT_N_S_serial_4a00000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ns16550(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ns16550(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_davinci_gpio(fn) fn(DT_N_S_gpio_4201010)
#define DT_FOREACH_OKAY_VARGS_ti_davinci_gpio(fn, ...) fn(DT_N_S_gpio_4201010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_davinci_gpio(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ti_davinci_gpio(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_memory_region(fn) fn(DT_N_S_memory_9cc00000)
#define DT_FOREACH_OKAY_VARGS_zephyr_memory_region(fn, ...) fn(DT_N_S_memory_9cc00000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_memory_region(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_memory_region(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_shared_dma_pool(fn) fn(DT_N_S_reserved_memory_S_memory_9cb00000)
#define DT_FOREACH_OKAY_VARGS_shared_dma_pool(fn, ...) fn(DT_N_S_reserved_memory_S_memory_9cb00000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_shared_dma_pool(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_shared_dma_pool(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_vnd_mbox_consumer(fn) fn(DT_N_S_mbox_consumer)
#define DT_FOREACH_OKAY_VARGS_vnd_mbox_consumer(fn, ...) fn(DT_N_S_mbox_consumer, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_vnd_mbox_consumer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_vnd_mbox_consumer(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
