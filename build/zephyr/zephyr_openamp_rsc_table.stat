ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF32
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           ARM
  Version:                           0x1
  Entry point address:               0x0
  Start of program headers:          52 (bytes into file)
  Start of section headers:          1045016 (bytes into file)
  Flags:                             0x5000200, Version5 EABI, soft-float ABI
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         5
  Size of section headers:           40 (bytes)
  Number of section headers:         37
  Section header string table index: 36

Section Headers:
  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
  [ 1] rom_start         PROGBITS        00000000 0000d8 000140 00 WAX  0   0  4
  [ 2] text              PROGBITS        00000140 000218 008974 00  AX  0   0  4
  [ 3] .ARM.exidx        ARM_EXIDX       00008ab4 008b8c 000008 00  AL  2   0  4
  [ 4] initlevel         PROGBITS        00008abc 008b94 000048 00   A  0   0  4
  [ 5] device_area       PROGBITS        00008b04 008bdc 000050 00   A  0   0  4
  [ 6] gpio_driver_[...] PROGBITS        00008b54 008c2c 000024 00   A  0   0  4
  [ 7] uart_driver_[...] PROGBITS        00008b78 008c50 000014 00   A  0   0  4
  [ 8] log_const_area    PROGBITS        00008b8c 008c64 000048 00   A  0   0  4
  [ 9] log_backend_area  PROGBITS        00008bd4 008cac 000010 00   A  0   0  4
  [10] tbss              NOBITS          00008be4 008cbc 000004 00 WAT  0   0  4
  [11] rodata            PROGBITS        00008be8 008cc0 00166c 00   A  0   0  8
  [12] .ramfunc          PROGBITS        0000a254 00a700 000000 00   W  0   0  1
  [13] datas             PROGBITS        0000a258 00a330 0000ca 00  WA  0   0  8
  [14] sw_isr_table      PROGBITS        0000a324 00a3fc 000200 00  WA  0   0  4
  [15] device_states     PROGBITS        0000a524 00a5fc 000008 00  WA  0   0  1
  [16] log_mpsc_pbu[...] PROGBITS        0000a52c 00a604 000038 00  WA  0   0  4
  [17] log_msg_ptr_area  PROGBITS        0000a564 00a63c 000004 00  WA  0   0  4
  [18] k_heap_area       PROGBITS        0000a568 00a640 000014 00  WA  0   0  4
  [19] k_sem_area        PROGBITS        0000a57c 00a654 000050 00  WA  0   0  4
  [20] bss               NOBITS          0000a5d0 00a6a4 000a5e 00  WA  0   0  8
  [21] noinit            NOBITS          0000b030 00a6a4 001c00 00  WA  0   0  8
  [22] .comment          PROGBITS        00000000 00a700 000020 01  MS  0   0  1
  [23] .debug_aranges    PROGBITS        00000000 00a720 001618 00      0   0  8
  [24] .debug_info       PROGBITS        00000000 00bd38 071f9c 00      0   0  1
  [25] .debug_abbrev     PROGBITS        00000000 07dcd4 00e7c3 00      0   0  1
  [26] .debug_line       PROGBITS        00000000 08c497 0278ad 00      0   0  1
  [27] .debug_frame      PROGBITS        00000000 0b3d44 003c54 00      0   0  4
  [28] .debug_str        PROGBITS        00000000 0b7998 009dc4 01  MS  0   0  1
  [29] .debug_loc        PROGBITS        00000000 0c175c 0273c8 00      0   0  1
  [30] .debug_ranges     PROGBITS        00000000 0e8b28 006a20 00      0   0  8
  [31] .ARM.attributes   ARM_ATTRIBUTES  00000000 0ef548 000032 00      0   0  1
  [32] .last_section     PROGBITS        0000cc30 00a6a4 000004 00   A  0   0  1
  [33] .resource_table   PROGBITS        9cc00000 00a6a8 000058 00  WA  0   0  4
  [34] .symtab           SYMTAB          00000000 0ef57c 008930 10     35 1170  4
  [35] .strtab           STRTAB          00000000 0f7eac 0071c2 00      0   0  1
  [36] .shstrtab         STRTAB          00000000 0ff06e 0001aa 00      0   0  1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), y (purecode), p (processor specific)

Program Headers:
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  EXIDX          0x008b8c 0x00008ab4 0x00008ab4 0x00008 0x00008 R   0x4
  LOAD           0x0000d8 0x00000000 0x00000000 0x0a5cc 0x0cc30 RWE 0x8
  LOAD           0x00a6a4 0x0000cc30 0x0000cc30 0x00004 0x00004 R   0x1
  LOAD           0x00a6a8 0x9cc00000 0x9cc00000 0x00058 0x00058 RW  0x4
  TLS            0x008cbc 0x00008be4 0x00008be4 0x00000 0x00004 R   0x4

 Section to Segment mapping:
  Segment Sections...
   00     .ARM.exidx 
   01     rom_start text .ARM.exidx initlevel device_area gpio_driver_api_area uart_driver_api_area log_const_area log_backend_area rodata datas sw_isr_table device_states log_mpsc_pbuf_area log_msg_ptr_area k_heap_area k_sem_area bss noinit 
   02     .last_section 
   03     .resource_table 
   04     tbss 
